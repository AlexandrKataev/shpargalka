export const items = [
  { header: 'arr.push(...items)', descr: 'Добавить элементы в конец массива.' },
  { header: 'arr.pop()', descr: 'Извлечь элемент с конца массива.' },
  { header: 'arr.shift()', descr: 'Извлечь элемент из начала массива.' },
  { header: 'arr.unshift(...items)', descr: 'Добавить элементы в начало массива.' },
  {
    header: 'justify-content',
    descr: `flex-start --- элементы сдвинуты в начало flex-direction направления. 
flex-end --- элементы сдвинуты ближе к концу flex направления. 
start --- элементы сдвинуты к началу writing-mode направления. 
end --- элементы сдвинуты в конце writing-mode направления. 
left --- элементы сдвинуты по направлению к левому краю контейнера, если это не имеет смысла flex-direction, тогда он right: элементы сдвинуты по направлению к правому краю контейнера, если это не имеет смысла flex-direction, тогда он ведет себя как start. v
center --- элементы центрированы вдоль линии
space-between --- элементы равномерно распределены по линии; первый элемент находится в начале строки, последний элемент в конце строки 
space-around --- элементы равномерно распределены по линии с одинаковым пространством вокруг них. Обратите внимание, что визуально пространства не равны, так как все элементы имеют одинаковое пространство с обеих сторон. Первый элемент будет иметь одну единицу пространства напротив края контейнера, но две единицы пространства между следующим элементом, потому что у следующего элемента есть свой собственный интервал, который применяется. 
space-evenly ---np элементы распределяются таким образом, чтобы расстояние между любыми двумя элементами (и расстояние до краев) было одинаковым.`,
  },
  { header: 'arr.splice()', descr: 'Добавить, удалить и заменить элементы массива.' },
  { header: 'arr.slice()', descr: 'Скопировать часть массива.' },
  { header: 'Array.from(arr)', descr: 'Скопировать массив.' },
  { header: 'JSON.stringify(arr) == JSON.stringify(arr2)', descr: 'Сравнение двух массивов.' },
  { header: `str.split([''])`, descr: 'Создать массив из букв строки.' },
  { header: 'arr.reverse()', descr: 'Сделать реверс массива' },
  { header: 'arr.forEach()', descr: 'Запустить функцию для каждого элемента массива.' },
  { header: 'arr.filter()', descr: 'Отфильтровать массив по условию. Возвращает новый массив.' },
];
